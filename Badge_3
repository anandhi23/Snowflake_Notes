COPY INTO "SMOOTHIES"."PUBLIC"."FRUIT_OPTIONS"
FROM (select $2 as FRUIT_ID, $1 as FRUIT_NAME
  from @smoothies.public.my_internal_stage/fruits_available_for_smoothies.txt)
FILE_FORMAT = (FORMAT_NAME=TWO_HEADERROW_PCT_DELIM)
ON_ERROR=ABORT_STATEMENT
--VALIDATION_MODE = RETURN_ERRORS
PURGE=TRUE;

CREATE FILE FORMAT "SMOOTHIES"."PUBLIC"."TWO_HEADERROW_PCT_DELIM"
    TYPE=CSV,
    SKIP_HEADER=2,
    FIELD_DELIMITER='%',
    TRIM_SPACE=FALSE,
    FIELD_OPTIONALLY_ENCLOSED_BY=NONE,
    REPLACE_INVALID_CHARACTERS=TRUE,
    DATE_FORMAT=AUTO,
    TIME_FORMAT=AUTO,
    TIMESTAMP_FORMAT=AUTO;

SELECT $1,$2,$1
from @smoothies.public.my_internal_stage/fruits_available_for_smoothies.txt
(FILE_FORMAT => smoothies.public.TWO_HEADERROW_PCT_DELIM);

select grader(step, (actual = expected), actual, expected, description) as graded_results from 
  ( SELECT 
  'DORA_IS_WORKING' as step
 ,(select 223) as actual
 , 223 as expected
 ,'Dora is working!' as description
); 

select GRADER(step, (actual = expected), actual, expected, description) as graded_results from (
  SELECT 'DABW001' as step
 ,( select count(*) 
   from SMOOTHIES.PUBLIC.FRUIT_OPTIONS) as actual
 , 25 as expected
 ,'Fruit Options table looks good' as description
);

create table smoothies.public.orders
(ingrediants varchar(200));

select * from SMOOTHIES.PUBLIC.FRUIT_OPTIONS;
insert into SMOOTHIES.PUBLIC.FRUIT_OPTIONS (fruit_id)values (2)

alter table smoothies.public.orders rename column ingrediants to ingredients

insert into smoothies.public.orders(ingredients) values ('Figs Guava ');

insert into smoothies.public.orders(ingredients) values (1);

select * from smoothies.public.orders;

truncate table smoothies.public.orders;

SMOOTHIES.PUBLIC."DNMCWYXSQR7BGPZL (Stage)"

select GRADER(step, (actual = expected), actual, expected, description) as graded_results from (
  SELECT 'DABW003' as step
 ,(select ascii(fruit_name) from smoothies.public.fruit_options
where fruit_name ilike 'z%') as actual
 , 90 as expected
 ,'A mystery check for the inquisitive' as description
);

select * from smoothies.public.orders

update smoothies.public.orders set order_filled = TRUE where ingredients = 'Blueberries Cantaloupe Dragon Fruit Apples '

alter table smoothies.public.orders add column order_filled boolean default FALSE


alter table smoothies.public.orders drop column order_filled 

insert into smoothies.public.orders(ingredients) values ('Elderberries Dragon Fruit ','')

insert into smoothies.public.orders(ingredients,name_on_order) values ('Figs Guava Honeydew ','ani')


select GRADER(step, (actual = expected), actual, expected, description) as graded_results from (
  SELECT 'DABW004' as step
 ,( select count(*) from smoothies.information_schema.columns
    where table_schema = 'PUBLIC' 
    and table_name = 'ORDERS'
    and column_name = 'ORDER_FILLED'
    and column_default = 'FALSE'
    and data_type = 'BOOLEAN') as actual
 , 1 as expected
 ,'Order Filled is Boolean' as description
);

select * from SMOOTHIES.PUBLIC.ORDERS;

alter table  SMOOTHIES.PUBLIC.ORDERS drop column order_uid 

alter table SMOOTHIES.PUBLIC.ORDERS 
add column order_uid integer --adds the column
default smoothies.public.order_seq.nextval  --sets the value of the column to sequence
constraint order_uid unique enforced; --makes sure there is always a unique value in the column;

create or replace table smoothies.public.orders (
       order_uid number(38,0) default smoothies.public.order_seq.nextval,
       order_filled boolean default false,
       name_on_order varchar(100),
       ingredients varchar(200),
       order_ts timestamp_ltz(9) default current_timestamp(),
       constraint order_uid unique (order_uid)
);

select GRADER(step, (actual = expected), actual, expected, description) as graded_results from (
 SELECT 'DABW005' as step
 ,(select count(*) from SMOOTHIES.INFORMATION_SCHEMA.STAGES
where stage_name like '%(Stage)') as actual
 , 2 as expected
 ,'There seem to be 2 SiS Apps' as description
);

set mystery_bag = 'What is in here?';

select $mystery_bag;

create function sum_mystery_bag_vars(var1 number, var2 number, var3 number)
 returns number as 'select var1+var2+var3';

 select sum_mystery_bags_vars(1,1,1);

 set this = -10.5;
set that = 2;
set the_other =  1000;

select GRADER(step, (actual = expected), actual, expected, description) as graded_results from (
  SELECT 'DABW006' as step
 ,( select util_db.public.sum_mystery_bag_vars($this,$that,$the_other)) as actual
 , 991.5 as expected
 ,'Mystery Bag Function Output' as description
);

create or replace function NEUTRALIZE_WHINING(var1 text)
  returns text as 'select INITCAP(var1)';

  select NEUTRALIZE_WHINING('giuyTWRcsTffdT sfeT');

  select GRADER(step, (actual = expected), actual, expected, description) as graded_results from (
 SELECT 'DABW007' as step
 ,( select hash(neutralize_whining('bUt mOm i wAsHeD tHe dIsHes yEsTeRdAy'))) as actual
 , -4759027801154767056 as expected
 ,'WHINGE UDF Works' as description
);

alter table FRUIT_OPTIONS add column SEARCH_ON text

select * from FRUIT_OPTIONS;

update FRUIT_OPTIONS
set search_on = 'Apple'
where fruit_name = 'Apples';

select GRADER(step, (actual = expected), actual, expected, description) as graded_results from (
   SELECT 'DABW008' as step 
   ,( select sum(hash_ing) from
      (select hash(ingredients) as hash_ing
       from smoothies.public.orders
       where order_ts is not null 
       and name_on_order is not null 
       and (name_on_order = 'Kevin' and order_filled = FALSE and hash_ing = 7976616299844859825) 
       or (name_on_order ='Divya' and order_filled = TRUE and hash_ing = -6112358379204300652)
       or (name_on_order ='Xi' and order_filled = TRUE and hash_ing = 1016924841131818535))
     ) as actual 
   , 2881182761772377708 as expected 
   ,'Followed challenge lab directions' as description
); 
